---
- name: "MAIN >> SYNC NETBOX TO KENTIK << MUST USE NETBOX INVENTORY"
  hosts: all
  gather_facts: false
  vars_files:
    - ./vars/credentials.yml

  tasks:

    - name: Collect List of Sites from netbox
      ansible.builtin.uri:
        url: "https://{{ netbox_host }}/api/dcim/sites/?limit=0"
        validate_certs: false
        headers:
          authorization: "Token {{ netbox_token }}"
      register: netbox_sites
      delegate_to: localhost
      run_once: true

    - name: Create the sites
      kentik.kentik_config.kentik_site:
        title: "{{ item['name'] }}"
        lat: "{{ item['latitude'] | int }}"
        lon: "{{ item['longitude'] | int }}"
        state: present
        email: "{{ kentik_user }}"
        token: "{{ kentik_token }}"
      delegate_to: localhost
      register: site_data
      run_once: true
      loop: "{{ netbox_sites.json.results }}"

    - name: Gather device roles from Netbox
      ansible.builtin.uri:
        url: "https://{{ netbox_host }}/api/dcim/device-roles/?limit=0"
        validate_certs: false
        headers:
          authorization: Token {{ netbox_token }}
      register: netbox_roles
      delegate_to: localhost
      run_once: true

    - name: Gather tenants from Netbox
      ansible.builtin.uri:
        url: "https://{{ netbox_host }}/api/tenancy/tenants/?limit=0"
        validate_certs: false
        headers:
          authorization: Token {{ netbox_token }}
      register: netbox_tenants
      delegate_to: localhost
      run_once: true

    - name: Gather tags from Netbox
      ansible.builtin.uri:
        url: "https://{{ netbox_host }}/api/extras/tags/?limit=0"
        validate_certs: false
        headers:
          authorization: Token {{ netbox_token }}
      register: netbox_tags
      delegate_to: localhost
      run_once: true

    - name: Create device role labels
      kentik.kentik_config.kentik_label:
        name: "{{ item['slug'] }}"
        color: "#{{ item['color'] }}"
        email: "{{ kentik_user }}"
        token: "{{ kentik_token }}"
      delegate_to: localhost
      loop: "{{ netbox_roles.json.results }}"
      run_once: true

    - name: Create tenant labels
      kentik.kentik_config.kentik_label:
        name: "{{ item['slug'] }}"
        color: "#00ff00"
        email: "{{ kentik_user }}"
        token: "{{ kentik_token }}"
      delegate_to: localhost
      loop: "{{ netbox_tenants.json.results }}"
      run_once: true

    - name: Create tags labels
      kentik.kentik_config.kentik_label:
        name: "{{ item['slug'] }}"
        color: "#{{ item['color'] }}"
        email: "{{ kentik_user }}"
        token: "{{ kentik_token }}"
      delegate_to: localhost
      loop: "{{ netbox_tags.json.results }}"
      run_once: true

    - name: Set fact for labels
      ansible.builtin.set_fact:
        labels: "{{ device_roles + tenants + tags }}"

    - name: Print labels
      ansible.builtin.debug:
        var: labels

    - name: Create Device
      kentik.kentik_config.kentik_device:
        deviceName: "{{ inventory_hostname }}"
        deviceSampleRate: 10
        planName: Free Flowpak Plan
        siteName: "{{ sites[0]['name'] }}"
        sendingIps: ["{{ primary_ip4 }}"]
        deviceSnmpIp: "{{ primary_ip4 }}"
        deviceSnmpCommunity: kentik
        minimizeSnmp: false
        nms:
          agentId: "27"
          ipAddress: "{{ primary_ip4 }}"
          snmp:
            credentialName: default
        labels: "{{ labels }}"
        email: "{{ kentik_user }}"
        token: "{{ kentik_token }}"
      delegate_to: localhost

    - name: Sync Prefixes
      kentik.kentik_config.kentik_netbox_prefixes:
        netboxUrl: "https://{{ netbox_host }}"
        netboxToken: "{{ netbox_token }}"
        enableTenant: true
        tenantName: "tenants"
        enableSitebyIP: true
        enableRoles: true
        enableDescriptions: true
        enableVlan: true
        enableCustomFields: true
        customFieldName: POD
        activeOnly: true
        email: "{{ kentik_user }}"
        token: "{{ kentik_token }}"
        region: US
      delegate_to: localhost
      run_once: true
